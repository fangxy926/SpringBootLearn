<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangman.springbootlearn.dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.yangman.springbootlearn.entity.Goods">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="price" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="image" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="brand" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, price, image, brand
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_goods
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yangman.springbootlearn.entity.Goods">
    insert into tb_goods (id, title, price, 
      image, brand)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.yangman.springbootlearn.entity.Goods">
        insert into tb_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="brand != null">
                brand,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="brand != null">
                #{brand,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yangman.springbootlearn.entity.Goods">
        update tb_goods
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="brand != null">
                brand = #{brand,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yangman.springbootlearn.entity.Goods">
    update tb_goods
    set title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByPage" parameterType="com.yangman.springbootlearn.entity.Goods" resultMap="BaseResultMap">
        SELECT * FROM tb_goods WHERE 1=1
        <if test="brand != null">
            AND brand LIKE CONCAT('%', #{brand}, '%')
        </if>
        <if test="title != null">
            AND title LIKE CONCAT('%', #{title}, '%')
        </if>
    </select>

</mapper>